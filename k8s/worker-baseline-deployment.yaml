apiVersion: apps/v1
kind: Deployment
metadata:
  name: temporal-worker-baseline
  labels:
    app: temporal-worker-baseline
spec:
  replicas: 1
  selector:
    matchLabels:
      app: temporal-worker-baseline
  template:
    metadata:
      labels:
        app: temporal-worker-baseline
      annotations:
        sidecar.signadot.com/inject: "true"
    spec:
      # Note: restartPolicy for Pods defaults to Always, which is suitable here.
      containers:
        - name: temporal-worker-baseline
          # It's recommended to use specific image tags instead of 'latest' in production.
          image: "<your-temporal-worker-image:tag>"
          env:
            - name: TASK_QUEUE
              value: "money-transfer"
            - name: SANDBOX_NAME
              value: ""
            - name: TEMPORAL_SERVER_URL
              value: "temporal.temporal.svc:7233" # Assumes a Kubernetes service named 'temporal' on port 7233
            - name: ROUTES_API_ROUTE_SERVER_ADDR
              value: "http://routeserver.signadot.svc:7778"
            - name: ROUTES_API_BASELINE_NAMESPACE
              value: "temporal"
            - name: ROUTES_API_BASELINE_NAME
              value: "temporal-worker-baseline"
          volumeMounts:
            - name: app-logs
              mountPath: /app/logs
      volumes:
        - name: app-logs
          emptyDir: {} # Logs will be ephemeral with the pod.
                      # For persistent logs, consider a PersistentVolumeClaim or centralized logging.

---

apiVersion: v1
kind: Service
metadata:
  name: temporal-worker-baseline
  labels:
    app: temporal-worker-baseline
spec:
  type: ClusterIP # Or NodePort/ClusterIP depending on your exposure needs
  selector:
    app: temporal-worker-baseline
  ports:
    - protocol: TCP
      port: 7233       # Port exposed externally by the service
      targetPort: 7233 # Port on the pods/containers